<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAGoAAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAEKAdoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDxqiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKMGl
        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
        +gof+/Kf4VxNFFgO7g+MXiuI5N8kns8CEfoK6Gw+PV6ihb/SreUgfeikKZ/A5ryOiiwHt5+Ptjj5dEuC
        fedR/Smp8frXfh9DmC+q3AP9K8SoosM90f486SIyV0q9L9lLrg/jVT/hftt30OUD2uAf6V4tRS5U9xHt
        DfHWxYEnSboN6CRSKoTfGqB2BTSJcd8zD/CvJqKORDuz12H4vabJkzWd1CQOxDZpE+LOkyNh7a6QZ4Yg
        H+teR0UvZxC7PYh8S9CkkVd86hjyxiwFrXt/EOk3YJg1G1df98A/rXg1JSdKI7s9+Gp2TuEF3bFz0USK
        c/rTndT/AErwDpyOtalt4l1e0iEcN/MEHRWO4D86l0uzHc9klcCqEr8/jXmcfjLWElDtciQDqrIMH8q2
        LfxvBKg+0xvE4HO35gaTptBdM6qaRRVKWRaxv+EnspTgT4z/AHlIqGTXrQkgXC0KLHdGlLIDnpn1qpLI
        KoSaxbnnzlP41XfUopD8sik+xqkmK5eeQCqksg9arSXWc81A1z700guTO4qPzRVR7j3pnnf7VOxNyrRR
        RViCiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKK
        KKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKADJ9T+dGT6n86K
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAoqW7/wCPyf8A66N/OoqACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAoorp7T/jzg/wCua/yoA//Z
</value>
  </data>
</root>